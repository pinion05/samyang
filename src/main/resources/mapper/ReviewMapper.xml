<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.farm404.samyang.mapper.ReviewMapper">
    
    <!-- 리뷰 조회 -->
    <select id="selectReviewById" resultType="ReviewDTO">
        SELECT 
            r.review_id,
            r.user_id,
            r.product_id,
            r.rating,
            r.comment,
            r.created_at,
            r.updated_at,
            u.name AS userName,
            c.crop_name AS productName
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        LEFT JOIN crop c ON r.product_id = c.crop_id
        WHERE r.review_id = #{reviewId}
    </select>
    
    <!-- 사용자별 리뷰 목록 조회 -->
    <select id="selectReviewsByUserId" resultType="ReviewDTO">
        SELECT 
            r.review_id,
            r.user_id,
            r.product_id,
            r.rating,
            r.comment,
            r.created_at,
            r.updated_at,
            u.name AS userName,
            c.crop_name AS productName
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        LEFT JOIN crop c ON r.product_id = c.crop_id
        WHERE r.user_id = #{userId}
        ORDER BY r.created_at DESC
    </select>
    
    <!-- 상품별 리뷰 목록 조회 -->
    <select id="selectReviewsByProductId" resultType="ReviewDTO">
        SELECT 
            r.review_id,
            r.user_id,
            r.product_id,
            r.rating,
            r.comment,
            r.created_at,
            r.updated_at,
            u.name AS userName,
            c.crop_name AS productName
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        LEFT JOIN crop c ON r.product_id = c.crop_id
        WHERE r.product_id = #{productId}
        ORDER BY r.created_at DESC
    </select>
    
    <!-- 모든 리뷰 조회 -->
    <select id="selectAllReviews" resultType="ReviewDTO">
        SELECT 
            r.review_id,
            r.user_id,
            r.product_id,
            r.rating,
            r.comment,
            r.created_at,
            r.updated_at,
            u.name AS userName,
            c.crop_name AS productName
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        LEFT JOIN crop c ON r.product_id = c.crop_id
        ORDER BY r.created_at DESC
    </select>
    
    <!-- 평점별 리뷰 조회 -->
    <select id="selectReviewsByRating" resultType="ReviewDTO">
        SELECT 
            r.review_id,
            r.user_id,
            r.product_id,
            r.rating,
            r.comment,
            r.created_at,
            r.updated_at,
            u.name AS userName,
            c.crop_name AS productName
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        LEFT JOIN crop c ON r.product_id = c.crop_id
        WHERE 1=1
        <if test="productId != null">
            AND r.product_id = #{productId}
        </if>
        <if test="rating != null">
            AND r.rating = #{rating}
        </if>
        ORDER BY r.created_at DESC
    </select>
    
    <!-- 리뷰 등록 -->
    <insert id="insertReview" parameterType="ReviewDTO">
        INSERT INTO review (
            user_id,
            product_id,
            rating,
            comment,
            created_at,
            updated_at
        ) VALUES (
            #{userId},
            #{productId},
            #{rating},
            #{comment},
            NOW(),
            NOW()
        )
    </insert>
    
    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="ReviewDTO">
        UPDATE review
        SET 
            rating = #{rating},
            comment = #{comment},
            updated_at = NOW()
        WHERE review_id = #{reviewId}
    </update>
    
    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>
    
    <!-- 상품의 평균 평점 조회 -->
    <select id="selectAverageRating" resultType="Double">
        SELECT AVG(rating) AS averageRating
        FROM review
        WHERE product_id = #{productId}
    </select>
    
    <!-- 상품의 리뷰 개수 조회 -->
    <select id="selectReviewCount" resultType="int">
        SELECT COUNT(*) AS reviewCount
        FROM review
        WHERE product_id = #{productId}
    </select>
    
    <!-- 사용자가 특정 상품에 리뷰를 작성했는지 확인 -->
    <select id="checkUserReviewed" resultType="int">
        SELECT COUNT(*)
        FROM review
        WHERE user_id = #{userId}
        AND product_id = #{productId}
    </select>
    
    <!-- 평점별 리뷰 통계 -->
    <select id="selectRatingStatistics" resultType="ReviewDTO">
        SELECT 
            rating,
            COUNT(*) AS reviewCount
        FROM review
        WHERE product_id = #{productId}
        GROUP BY rating
        ORDER BY rating DESC
    </select>
    
</mapper>