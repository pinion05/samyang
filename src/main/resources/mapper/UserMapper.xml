<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.farm404.samyang.mapper.UserMapper">

	<!-- 로그인 인증 -->
	<select id="getLogin" parameterType="com.farm404.samyang.dto.UserDTO" resultType="_int">
		SELECT
			COUNT(*) as userCnt
		FROM User
		WHERE
			Email = #{email}
			AND Password = #{password}
	</select>
	
	<!-- 사용자 전체 조회 -->
	<select id="getAllUsers" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			Name as name,
			Email as email,
			Password as password,
			PhoneNumber as phoneNumber,
			Address as address,
			IsAdmin as isAdmin,
			CreatedAt as createdAt
		FROM User
		ORDER BY CreatedAt DESC
	</select>
	
	<!-- 사용자 페이징 조회 -->
	<select id="selectUsersWithPaging" parameterType="com.farm404.samyang.dto.PageRequest" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			Name as name,
			Email as email,
			Password as password,
			PhoneNumber as phoneNumber,
			Address as address,
			IsAdmin as isAdmin,
			CreatedAt as createdAt
		FROM User
		<if test="sortBy != null and sortBy != ''">
			ORDER BY ${sortBy} ${sortDirection}
		</if>
		<if test="sortBy == null or sortBy == ''">
			ORDER BY CreatedAt DESC
		</if>
		LIMIT #{size} OFFSET #{offset}
	</select>
	
	<!-- 사용자 총 개수 조회 -->
	<select id="countUsers" resultType="_long">
		SELECT COUNT(*) FROM User
	</select>
	
	<!-- 사용자 ID로 조회 -->
	<select id="getUserById" parameterType="_int" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			Name as name,
			Email as email,
			Password as password,
			PhoneNumber as phoneNumber,
			Address as address,
			IsAdmin as isAdmin,
			CreatedAt as createdAt
		FROM User
		WHERE UserID = #{userId}
	</select>
	
	<!-- 사용자 등록 -->
	<insert id="insertUser" parameterType="com.farm404.samyang.dto.UserDTO">
		INSERT INTO User (
			Name,
			Email,
			Password,
			PhoneNumber,
			Address,
			IsAdmin
		) VALUES (
			#{name},
			#{email},
			#{password},
			#{phoneNumber},
			#{address},
			#{isAdmin}
		)
	</insert>
	
	<!-- 사용자 수정 -->
	<update id="updateUser" parameterType="com.farm404.samyang.dto.UserDTO">
		UPDATE User SET
			Name = #{name},
			Email = #{email},
			Password = #{password},
			PhoneNumber = #{phoneNumber},
			Address = #{address},
			IsAdmin = #{isAdmin}
		WHERE UserID = #{userId}
	</update>
	
	<!-- 사용자 삭제 -->
	<delete id="deleteUser" parameterType="_int">
		DELETE FROM User
		WHERE UserID = #{userId}
	</delete>
	
	<!-- 이메일 중복 체크 -->
	<select id="checkEmailExists" parameterType="String" resultType="_int">
		SELECT COUNT(*) FROM User WHERE Email = #{email}
	</select>
	
	<!-- 이메일로 로그인 -->
	<select id="loginByEmail" parameterType="com.farm404.samyang.dto.UserDTO" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			Name as name,
			Email as email,
			Password as password,
			PhoneNumber as phoneNumber,
			Address as address,
			IsAdmin as isAdmin,
			CreatedAt as createdAt
		FROM User
		WHERE Email = #{email} AND Password = #{password}
	</select>
	
	<!-- 사용자 등록 (registerUser 메서드용) -->
	<!-- TODO: [중복제거] insertUser와 동일한 기능 - 하나로 통일 필요 -->
	<insert id="registerUser" parameterType="com.farm404.samyang.dto.UserDTO">
		INSERT INTO User (
			Name,
			Email,
			Password,
			PhoneNumber,
			Address,
			IsAdmin
		) VALUES (
			#{name},
			#{email},
			#{password},
			#{phoneNumber},
			#{address},
			#{isAdmin}
		)
	</insert>
	
	<!-- 사용자 리스트 조회 -->
	<select id="selectUserList" parameterType="com.farm404.samyang.dto.UserDTO" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			/* TODO: DB에 없는 컬럼 매핑 수정 */
			Email as loginId,
			Name as name,
			Email as email,
			PhoneNumber as phone,
			CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END as role,
			CreatedAt as createdAt
		FROM User
		<where>
			<if test="name != null and name != ''">
				AND Name LIKE CONCAT('%', #{name}, '%')
			</if>
			<if test="email != null and email != ''">
				AND Email LIKE CONCAT('%', #{email}, '%')
			</if>
			<if test="role != null and role != ''">
				AND CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END = #{role}
			</if>
		</where>
		ORDER BY CreatedAt DESC
	</select>
	
	<!-- 사용자 수 조회 -->
	<select id="selectUserCount" parameterType="com.farm404.samyang.dto.UserDTO" resultType="_int">
		SELECT COUNT(*)
		FROM User
		<where>
			<if test="name != null and name != ''">
				AND Name LIKE CONCAT('%', #{name}, '%')
			</if>
			<if test="email != null and email != ''">
				AND Email LIKE CONCAT('%', #{email}, '%')
			</if>
			<if test="role != null and role != ''">
				AND CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END = #{role}
			</if>
		</where>
	</select>
	
	<!-- ID로 사용자 조회 (새 버전) -->
	<select id="selectUserById" parameterType="String" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			/* TODO: DB에 없는 컬럼 매핑 수정 */
			Email as loginId,
			Name as name,
			Email as email,
			PhoneNumber as phone,
			CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END as role,
			CreatedAt as createdAt
		FROM User
		WHERE UserID = #{userId}
	</select>
	
	<!-- 로그인 ID로 사용자 조회 -->
	<select id="selectUserByUsername" parameterType="String" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			/* TODO: [치명적오류] LoginID, Phone, Role 컬럼이 DB에 존재하지 않음 
			   DB 실제 컬럼: UserID, Name, Email, PhoneNumber, IsAdmin */
			Email as loginId,  -- 임시로 Email을 loginId로 사용
			Name as name,
			Email as email,
			PhoneNumber as phone,  -- Phone -> PhoneNumber로 수정
			CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END as role,  -- IsAdmin을 role로 변환
			CreatedAt as createdAt
		FROM User
		WHERE Email = #{loginId}  -- LoginID -> Email로 수정
	</select>
	
	<!-- 모든 사용자 조회 (새 버전) -->
	<select id="selectAllUsers" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			/* TODO: DB에 없는 컬럼 매핑 수정 */
			Email as loginId,
			Name as name,
			Email as email,
			PhoneNumber as phone,
			CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END as role,
			CreatedAt as createdAt
		FROM User
		ORDER BY CreatedAt DESC
	</select>
	
	<!-- 로그인 체크 -->
	<select id="checkLogin" resultType="com.farm404.samyang.dto.UserDTO">
		SELECT
			UserID as userId,
			/* TODO: DB에 없는 컬럼 매핑 수정 */
			Email as loginId,
			Name as name,
			Email as email,
			PhoneNumber as phone,
			CASE WHEN IsAdmin = 1 THEN 'ADMIN' ELSE 'USER' END as role,
			CreatedAt as createdAt
		FROM User
		WHERE Email = #{username} AND Password = #{password}  -- LoginID -> Email로 수정
	</select>
	
	<!-- 프로필 업데이트 (비밀번호 제외) -->
	<update id="updateUserProfile" parameterType="com.farm404.samyang.dto.UserDTO">
		UPDATE User SET
			Name = #{name},
			Email = #{email},
			PhoneNumber = #{phone}
		WHERE UserID = #{userId}
	</update>
	
	<!-- 비밀번호 업데이트 -->
	<update id="updatePassword">
		UPDATE User SET
			Password = #{password}
		WHERE UserID = #{userId}
	</update>
	
</mapper>