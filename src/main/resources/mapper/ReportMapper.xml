<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.farm404.samyang.mapper.ReportMapper">

    <resultMap id="ReportResultMap" type="com.farm404.samyang.dto.ReportDTO">
        <id property="reportId" column="report_id" />
        <result property="reporterUserId" column="reporter_user_id" />
        <result property="reportedUserId" column="reported_user_id" />
        <result property="reason" column="reason" />
        <result property="content" column="content" />
        <result property="status" column="status" />
        <result property="createdAt" column="created_at" />
        <result property="reporterUserName" column="reporter_user_name" />
        <result property="reportedUserName" column="reported_user_name" />
    </resultMap>

    <insert id="insertReport" parameterType="com.farm404.samyang.dto.ReportDTO" useGeneratedKeys="true" keyProperty="reportId">
        INSERT INTO Report (
            reporter_user_id, reported_user_id, reason, content, status
        ) VALUES (
            #{reporterUserId}, #{reportedUserId}, #{reason}, #{content}, #{status}
        )
    </insert>

    <select id="selectReportList" parameterType="com.farm404.samyang.dto.ReportDTO" resultMap="ReportResultMap">
        SELECT 
            rp.report_id, rp.reporter_user_id, rp.reported_user_id, rp.reason, rp.content, rp.status, rp.created_at,
            u1.name as reporter_user_name,
            u2.name as reported_user_name
        FROM Report rp
        LEFT JOIN User u1 ON rp.reporter_user_id = u1.user_id
        LEFT JOIN User u2 ON rp.reported_user_id = u2.user_id
        <where>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (rp.reason LIKE CONCAT('%', #{searchKeyword}, '%') 
                 OR rp.content LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR u1.name LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR u2.name LIKE CONCAT('%', #{searchKeyword}, '%'))
            </if>
            <if test="statusFilter != null and statusFilter != ''">
                AND rp.status = #{statusFilter}
            </if>
        </where>
        ORDER BY rp.created_at DESC
    </select>

    <select id="selectReportById" parameterType="int" resultMap="ReportResultMap">
        SELECT 
            rp.report_id, rp.reporter_user_id, rp.reported_user_id, rp.reason, rp.content, rp.status, rp.created_at,
            u1.name as reporter_user_name,
            u2.name as reported_user_name
        FROM Report rp
        LEFT JOIN User u1 ON rp.reporter_user_id = u1.user_id
        LEFT JOIN User u2 ON rp.reported_user_id = u2.user_id
        WHERE rp.report_id = #{reportId}
    </select>

    <select id="selectReportListByReporterId" parameterType="int" resultMap="ReportResultMap">
        SELECT 
            rp.report_id, rp.reporter_user_id, rp.reported_user_id, rp.reason, rp.content, rp.status, rp.created_at,
            u1.name as reporter_user_name,
            u2.name as reported_user_name
        FROM Report rp
        LEFT JOIN User u1 ON rp.reporter_user_id = u1.user_id
        LEFT JOIN User u2 ON rp.reported_user_id = u2.user_id
        WHERE rp.reporter_user_id = #{reporterUserId}
        ORDER BY rp.created_at DESC
    </select>

    <select id="selectReportListByReportedId" parameterType="int" resultMap="ReportResultMap">
        SELECT 
            rp.report_id, rp.reporter_user_id, rp.reported_user_id, rp.reason, rp.content, rp.status, rp.created_at,
            u1.name as reporter_user_name,
            u2.name as reported_user_name
        FROM Report rp
        LEFT JOIN User u1 ON rp.reporter_user_id = u1.user_id
        LEFT JOIN User u2 ON rp.reported_user_id = u2.user_id
        WHERE rp.reported_user_id = #{reportedUserId}
        ORDER BY rp.created_at DESC
    </select>

    <update id="updateReport" parameterType="com.farm404.samyang.dto.ReportDTO">
        UPDATE Report SET
            reason = #{reason},
            content = #{content},
            status = #{status}
        WHERE report_id = #{reportId}
    </update>

    <update id="updateReportStatus" parameterType="com.farm404.samyang.dto.ReportDTO">
        UPDATE Report SET
            status = #{status}
        WHERE report_id = #{reportId}
    </update>

    <delete id="deleteReport" parameterType="int">
        DELETE FROM Report
        WHERE report_id = #{reportId}
    </delete>

    <select id="selectReportCount" parameterType="com.farm404.samyang.dto.ReportDTO" resultType="int">
        SELECT COUNT(*) 
        FROM Report rp
        LEFT JOIN User u1 ON rp.reporter_user_id = u1.user_id
        LEFT JOIN User u2 ON rp.reported_user_id = u2.user_id
        <where>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (rp.reason LIKE CONCAT('%', #{searchKeyword}, '%') 
                 OR rp.content LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR u1.name LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR u2.name LIKE CONCAT('%', #{searchKeyword}, '%'))
            </if>
            <if test="statusFilter != null and statusFilter != ''">
                AND rp.status = #{statusFilter}
            </if>
        </where>
    </select>

    <select id="selectReportCountByReporterId" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM Report
        WHERE reporter_user_id = #{reporterUserId}
    </select>

    <select id="selectReportCountByReportedId" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM Report
        WHERE reported_user_id = #{reportedUserId}
    </select>

</mapper>